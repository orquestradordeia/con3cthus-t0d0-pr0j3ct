services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20

  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./docker/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - mosqdata:/mosquitto/data
      - mosqlog:/mosquitto/log
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 1883 && nc -z localhost 9001"]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build:
      context: ./backend
    environment:
      DATABASE_URL: postgresql://app:app@postgres:5432/app?schema=public
      REDIS_URL: redis://redis:6379
      MQTT_URL: mqtt://mosquitto:1883
      PORT: "3000"
      JWT_SECRET: secret
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      mosquitto:
        condition: service_healthy
    command: ["sh", "-lc", "npx prisma migrate deploy && node dist/main.js"]

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_started
    # A UI resolve API/MQTT URLs via index.html window.ENV usando a origem :5173 -> :3000 e :9001

volumes:
  pgdata:
  mosqdata:
  mosqlog:
